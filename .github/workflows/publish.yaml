name: Publish Docker Images

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Verify DockerHub Secrets
        run: echo "DockerHub Secrets Verified"

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Publish Docker Image (Kali)
        id: publish_kali
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/kali-linux:${{ github.sha }}-${{ github.event.inputs.platforms }}
          push: true

      - name: Post Publish Docker Image (Kali)
        run: echo "Docker Image Published"

      - name: Set success variables
        if: success()
        run: |
          echo "status_on_success_push=success" >> $GITHUB_ENV
          echo "status_on_success_update_chart=success" >> $GITHUB_ENV
          echo "error_message_push=" >> $GITHUB_ENV
          echo "error_output_push=" >> $GITHUB_ENV
          echo "error_message_update_chart=" >> $GITHUB_ENV
          echo "error_output_update_chart=" >> $GITHUB_ENV

      - name: Set failure variables
        if: failure()
        run: |
          echo "status_on_success_push=failure" >> $GITHUB_ENV
          echo "status_on_success_update_chart=failure" >> $GITHUB_ENV
          echo "error_message_push=Docker Image Publish Failed" >> $GITHUB_ENV
          echo "error_output_push=${{ steps.publish_kali.outcome }}" >> $GITHUB_ENV
          echo "error_message_update_chart=Update Chart Failed" >> $GITHUB_ENV
          echo "error_output_update_chart=No updates to chart"

      - name: Notify
        uses: actions/github-script@v4
        with:
          script: |
            github.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "notify-pipeline-status.yml",
              ref: context.ref,
              inputs: {
                pipeline: "capstone-kali",
                status_on_success_push: process.env.status_on_success_push,
                status_on_success_update_chart: process.env.status_on_success_update_chart,
                error_message_push: process.env.error_message_push,
                error_output_push: process.env.error_output_push,
                error_message_update_chart: process.env.error_message_update_chart,
                error_output_update_chart: process.env.error_output_update_chart
              }
            });
